/**:
  ros__parameters:

    # ----------------- VISION / PATH FOLLOW -----------------
    vision:
      image_topic: "/camera/image_raw/"
      camera_info_topic: "/camera/camera_info"
      roi_top: 0.60
      roi_bottom: 1.00
      hsv_low:  [18, 70, 70]
      hsv_high: [40, 255, 255]
      morph_open: 3
      morph_close: 5
      min_coverage: 0.005
      centroid_deadband_px: 8
      show_debug: false

    # ----------------- PART A (END GATING) -----------------
    a:
      arm_after_m: 6.5            # arm QR after traveling this many meters
      arm_after_s: 20.0           # ...or after this many seconds (whichever comes first)
      use_yellow_endgate: false    # also require that yellow coverage is small
      yellow_frac_thresh: 0.10   # <= 1.0% yellow in ROI means “end-ish”

    # ----------------- CONTROLLER -----------------
    ctrl:
      kp_ang: 1.3
      max_ang_vel: 1.2
      max_lin_vel: 0.17
      search_ang_vel: 0.35
      ang_ema_alpha: 0.5

    # ----------------- QR DETECTION -----------------
    qr:
      stop_text: "STOP"
      min_bbox_px: 90            # bigger to ensure it’s really at the end; was 90
      consecutive_required: 3
      stop_on_any_qr: true
      stop_hold_ms: 800
      resize_factor: 1.2         # try 1.2–1.8 if QR is small in the image
      debug_every: 5
      use_binary_pass: true
      use_sharpen_pass: true
    

    # ----------------- TURN AFTER QR -----------------
    turn:
      method: "odom"              # "odom" for exact-angle, "time" fallback
      target_deg: 90.0
      vel: -0.8                   # negative = right turn; flip sign if it turns wrong way
      duration_s: 1.20            # only used when method="time"
      timeout_s: 3.0

    # ----------------- SLAM WAIT (B1) -----------------
    slam:
      skip_b1: true
      use_lifecycle: false
      min_map_updates: 0
      max_wait_s: 0.0
      service_wait_s: 3.0
      

    # ----------------- ARUCO (B) -----------------
    aruco:
      dictionary: "DICT_5X5_100"
      marker_length_m: 0.10
      settle_ms: 300
      scan_ang_vel: 0.0
      scan_timeout_s: 10.0
      min_perim_px: 40
      show_debug: false

    goals:
      "1": [2.9, -0.18, 0.0]
      "2": [2.9, -0.55, 0.0]
      "3": [2.9, -0.90, 0.0]
      "4": [2.9, -1.26, 0.0]
      "5": [2.9, -1.62, 0.0]

    # ----------------- DOCKING (C) -----------------
    docking:
      target_distance_m: 0.10
      distance_tol_m: 0.01
      lin_kp: 0.6
      ang_kp: 1.2
      max_lin: 0.18
      max_ang: 1.0
      ang_tol_deg: 6.0     
      align_final: true
      ang_tol_deg: 6.0       # already present; controls how precise the yaw must be
      align_first: true
      blind_fwd_vel: 0.06      # go-straight speed until the marker comes into view
      blind_timeout_s: 3.0     # safety cap
      docking.center_kp: 0.6
      docking.center_cap: 0.5
      docking.forward_cap: 0.10



